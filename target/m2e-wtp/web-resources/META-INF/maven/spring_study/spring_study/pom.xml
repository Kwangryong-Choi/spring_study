<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>spring_study</groupId>
  <artifactId>spring_study</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>spring_study</name>
  <description>spring_study</description>
  
  <!--  배포 파일에 맞춰서 해당 압축파일을 생성하는 라이브러리  -->
	<build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>3.3.2</version>
		</plugin>
	</plugins>
	</build>
	
	<!--  프로젝트에 필요한 각종 라이브러리 설치 목록 -->
	<dependencies>
	
		<!-- mybatis 3.5.6 -->
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.5.6</version>
		</dependency>
		
		<!-- bybatis spring 2.0.6 -->
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>2.0.6</version>
		</dependency>
	
		<!--  파일업로드 라이브러리  -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.5</version>
		</dependency>
		
		<!--  lombok : DTO,VO (setter,getter)  -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.36</version>
			<scope>provided</scope>
		</dependency>
		
		<!--  JSP + JSTL 언어를 사용하기 위한 라이브러리  -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!--  spring+mysql (Model, Controller, View) : mysql 서버 접속 환경설정 라이브러리  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>5.3.39</version>
		</dependency>
		
		<!--  Spring MVC  -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.3.39</version>
		</dependency>
		
		<!--  was 버젼셋팅  -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<version>8.5.61</version>
		</dependency>
		
		<!--   DBCP : (Database Connection) - Spring, Spring-boot  -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		
		<!--  java web으로 사용할 수 있는 Servlet 라이브러리  -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		
		<!--  mysql 라이브러리  -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.30</version>
		</dependency>
		
		<!-- slf4j (log 출력 라이브러리) : jdk 및 라이브러리 호출에 대한 정보 -->
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>2.0.17</version>
		</dependency>
		
		<!-- java 또는 Controller, Model을 구현 시 결과값의 처리 정보를 출력 및 기록 -->
		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-log4j12</artifactId>
		    <version>2.0.17</version>
		    <scope>runtime</scope>
		</dependency>
		
		<!-- Server 오류 및 소켓통신, 포트통신일 경우 기록 -->
		<!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>jcl-over-slf4j</artifactId>
		    <version>2.0.17</version>
		    <scope>runtime</scope>
		</dependency>
		
		<!-- console에 출력 -->
		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
		    <groupId>log4j</groupId>
		    <artifactId>log4j</artifactId>
		    <version>1.2.17</version>
		    <scope>runtime</scope>
		</dependency>
		
		<!-- Javax Inject  :  Spring, Spring-boot 에서 사용,  Database 관련 id 의존성 주입하기 위해 사용
		@Inject 사용할 수 있게됨 -->
		<!-- https://mvnrepository.com/artifact/javax.inject/javax.inject -->
		<dependency>
		    <groupId>javax.inject</groupId>
		    <artifactId>javax.inject</artifactId>
		    <version>1</version>
		</dependency>
		
		<!-- JSON IN JAVA (API, .JSON 파일 생성) -->
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20250107</version>
		</dependency>
		
		<!-- JSON.Simple (API, .JSON 파일 생성) -->
		<!-- https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple -->
		<dependency>
		    <groupId>com.googlecode.json-simple</groupId>
		    <artifactId>json-simple</artifactId>
		    <version>1.1.1</version>
		</dependency>
		
		<!--   JavaMail API JAR (mail - API)   -->
		<!-- https://mvnrepository.com/artifact/javax.mail/javax.mail-api -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>javax.mail-api</artifactId>
		    <version>1.4.7</version>
		</dependency>
		
		<!-- JavaMail API (compat) -->
		<!-- https://mvnrepository.com/artifact/javax.mail/mail -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.7</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/javax.activation/activation -->
		<dependency>
		    <groupId>javax.activation</groupId>
		    <artifactId>activation</artifactId>
		    <version>1.1.1</version>
		</dependency>
		
	</dependencies>
	
	<!--  jdk 버젼 셋팅  -->
	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
	</properties>
  
  
</project>